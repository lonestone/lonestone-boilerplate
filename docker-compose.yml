version: '3.8'

services:
  # Base de donn√©es
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: lonestone
      POSTGRES_PASSWORD: password
      POSTGRES_DB: lonestone
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lonestone"]
      interval: 5s
      timeout: 5s
      retries: 5

  # API Backend
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    environment:
      DATABASE_URL: postgres://lonestone:password@db:5432/lonestone
      JWT_SECRET: your_secret_key_here
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy

  # Application SPA
  web-spa:
    build:
      context: .
      dockerfile: apps/web-spa/Dockerfile
      args:
        VITE_API_URL: http://localhost:3000
        VITE_APP_ENV: production
        VITE_APP_VERSION: 1.0.0
    ports:
      - "80:80"
    depends_on:
      - api

  # Application SSR
  web-ssr:
    build:
      context: .
      dockerfile: apps/web-ssr/Dockerfile
    environment:
      API_URL: http://api:3000
      NODE_ENV: production
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - api

volumes:
  postgres_data:
