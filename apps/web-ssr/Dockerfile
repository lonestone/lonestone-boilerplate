# Image de base avec Node.js et pnpm pr√©install√©
FROM node:20-alpine AS node-pnpm
RUN npm install -g pnpm

# üîπ √âtape 1 : Installation des d√©pendances
FROM node-pnpm AS deps

WORKDIR /app

# Copier uniquement les fichiers n√©cessaires pour l'installation des d√©pendances
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Cr√©er la structure de r√©pertoires pour les packages n√©cessaires
# Ajoutez ou supprimez des packages selon vos besoins
RUN mkdir -p packages/ui packages/validations packages/openapi-generator apps/web-ssr

# Copier les package.json des packages n√©cessaires uniquement
COPY packages/ui/package.json ./packages/ui/
COPY packages/validations/package.json ./packages/validations/
COPY packages/openapi-generator/package.json ./packages/openapi-generator/
COPY apps/web-ssr/package.json ./apps/web-ssr/

# Installer toutes les d√©pendances (dev + prod) avec hoisting
RUN pnpm install --frozen-lockfile --shamefully-hoist

# üîπ √âtape 2 : Installation des d√©pendances de production uniquement
FROM node-pnpm AS prod-deps

WORKDIR /app

# Copier uniquement les fichiers n√©cessaires pour l'installation des d√©pendances
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Cr√©er la structure de r√©pertoires pour les packages n√©cessaires
RUN mkdir -p packages/ui packages/validations packages/openapi-generator apps/web-ssr

# Copier les package.json des packages n√©cessaires uniquement
COPY packages/ui/package.json ./packages/ui/
COPY packages/validations/package.json ./packages/validations/
COPY packages/openapi-generator/package.json ./packages/openapi-generator/
COPY apps/web-ssr/package.json ./apps/web-ssr/

# Installer uniquement les d√©pendances de production avec hoisting
RUN pnpm install --prod --frozen-lockfile --shamefully-hoist

# üîπ √âtape 3 : Build
FROM node-pnpm AS builder

WORKDIR /app

# Copier uniquement les packages n√©cessaires
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml tsconfig.json tsconfig.base.json ./
COPY packages/ui ./packages/ui
COPY packages/validations ./packages/validations
COPY packages/openapi-generator ./packages/openapi-generator
COPY apps/web-ssr ./apps/web-ssr

# Copier les d√©pendances de l'√©tape pr√©c√©dente
COPY --from=deps /app/node_modules ./node_modules

# Compiler les packages n√©cessaires et l'application SSR
RUN pnpm build

# üîπ √âtape 4 : Production (Image finale)
FROM node-pnpm AS runner

WORKDIR /app

# D√©finir l'environnement
ENV NODE_ENV=production

COPY --from=builder /app/apps/web-ssr/build ./build
COPY --from=builder /app/apps/web-ssr/package.json ./package.json

# Copier les d√©pendances de production
COPY --from=prod-deps /app/node_modules ./node_modules

# D√©finir le r√©pertoire de travail pour l'application SSR
WORKDIR /app

# Exposer le port
EXPOSE 3000

# D√©marrer l'application
CMD ["pnpm", "run", "start"]