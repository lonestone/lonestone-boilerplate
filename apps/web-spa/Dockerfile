# Image de base avec Node.js et pnpm pr√©install√©
FROM node:20-alpine AS node-pnpm
RUN npm install -g pnpm

# üîπ √âtape 1 : Installation des d√©pendances
FROM node-pnpm AS deps

WORKDIR /app

# Copier uniquement les fichiers n√©cessaires pour l'installation des d√©pendances
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Cr√©er la structure de r√©pertoires pour les packages n√©cessaires
# Ajoutez ou supprimez des packages selon vos besoins
RUN mkdir -p packages/ui packages/validations packages/openapi-generator apps/web-spa

# Copier les package.json des packages n√©cessaires uniquement
COPY packages/ui/package.json ./packages/ui/
COPY packages/validations/package.json ./packages/validations/
COPY packages/openapi-generator/package.json ./packages/openapi-generator/
COPY apps/web-spa/package.json ./apps/web-spa/

# Installer toutes les d√©pendances (dev + prod) avec hoisting
RUN pnpm install --frozen-lockfile --shamefully-hoist

# üîπ √âtape 2 : Build
FROM node-pnpm AS builder

WORKDIR /app

# D√©finir les arguments de build qui peuvent √™tre pass√©s lors de la construction de l'image
ARG VITE_API_URL
ARG VITE_APP_ENV=production
ARG VITE_APP_VERSION
# Autres variables d'environnement sp√©cifiques √† votre application
# ARG VITE_FEATURE_FLAG_X
# ARG VITE_ANALYTICS_ID

# D√©finir les variables d'environnement pour le build
ENV VITE_API_URL=${VITE_API_URL}
ENV VITE_APP_ENV=${VITE_APP_ENV}
ENV VITE_APP_VERSION=${VITE_APP_VERSION}
# ENV VITE_FEATURE_FLAG_X=${VITE_FEATURE_FLAG_X}
# ENV VITE_ANALYTICS_ID=${VITE_ANALYTICS_ID}

# Copier uniquement les packages n√©cessaires
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml tsconfig.json tsconfig.base.json ./
COPY packages/ui ./packages/ui
COPY packages/validations ./packages/validations
COPY packages/openapi-generator ./packages/openapi-generator
COPY apps/web-spa ./apps/web-spa

# Copier les d√©pendances de l'√©tape pr√©c√©dente
COPY --from=deps /app/node_modules ./node_modules

# Compiler les packages n√©cessaires et la SPA
RUN pnpm build

# üîπ √âtape 3 : Production (Image finale avec Nginx)
FROM nginx:alpine

# Copie de la configuration nginx pour les SPA (redirection vers index.html)
COPY apps/web-spa/nginx.conf /etc/nginx/conf.d/default.conf

# Copie des fichiers de build dans le r√©pertoire de nginx
COPY --from=builder /app/apps/web-spa/build /usr/share/nginx/html

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]