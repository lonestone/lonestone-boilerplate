// This file is auto-generated by @hey-api/openapi-ts

import { z } from "zod";

export const zCreatePostSchema = z.object({
  title: z.string().min(1),
  content: z.array(
    z.object({
      type: z.enum(["text", "image", "video"]),
      data: z.string(),
    })
  ),
});

export const zPostContentSchema = z.object({
  type: z.enum(["text", "image", "video"]),
  data: z.string(),
});

export const zUpdatePostSchema = z.object({
  title: z.string().min(1).optional(),
  content: z.array(zPostContentSchema).optional(),
});

export const zPaginationQuerySchema = z.object({
  offset: z.number().int().gte(0).optional().default(0),
  pageSize: z.number().int().gte(1).lte(100).optional().default(20),
});

export const zPaginationQuerySchemaOffset = z.number().int().gte(0).default(0);

export const zPaginationQuerySchemaPageSize = z
  .number()
  .int()
  .gte(1)
  .lte(100)
  .default(20);

export const zSortingQueryStringSchema = z.string();

export const zFilterQueryStringSchema = z.string();

export const zUserPostSchema = z.object({
  id: z.string().uuid(),
  slug: z.union([z.string(), z.null()]).optional(),
  title: z.string(),
  content: z.array(zPostContentSchema),
  versions: z.array(
    z.object({
      id: z.string().uuid(),
      title: z.string(),
      createdAt: z.string().datetime(),
    })
  ),
  publishedAt: z.union([z.string().datetime(), z.null()]).optional(),
  type: z.enum(["published", "draft"]),
});

export const zPostVersionSchema = z.object({
  id: z.string().uuid(),
  title: z.string(),
  createdAt: z.string().datetime(),
});

export const zUserPostsSchema = z.object({
  data: z.array(
    z.object({
      id: z.string().uuid(),
      slug: z.union([z.string(), z.null()]).optional(),
      title: z.string(),
      versions: z.array(zPostVersionSchema),
      publishedAt: z.union([z.string().datetime(), z.null()]).optional(),
      type: z.enum(["published", "draft"]),
      contentPreview: zPostContentSchema,
    })
  ),
  meta: z.object({
    offset: z.number(),
    pageSize: z.number(),
    itemCount: z.number(),
    hasMore: z.boolean(),
  }),
});

export const zPublicPostSchema = z.object({
  title: z.string(),
  author: z.object({
    name: z.string(),
  }),
  content: z.array(zPostContentSchema),
  publishedAt: z.string().datetime(),
  slug: z.string().optional(),
});

export const zPublicPostsSchema = z.object({
  data: z.array(
    z.object({
      title: z.string(),
      author: z.object({
        name: z.string(),
      }),
      publishedAt: z.string().datetime(),
      slug: z.string().optional(),
      contentPreview: zPostContentSchema,
    })
  ),
  meta: z.object({
    offset: z.number(),
    pageSize: z.number(),
    itemCount: z.number(),
    hasMore: z.boolean(),
  }),
});

export const zPostControllerGetUserPostsResponse = zUserPostsSchema;

export const zPostControllerCreatePostResponse = zUserPostSchema;

export const zPostControllerGetUserPostResponse = zUserPostSchema;

export const zPostControllerUpdatePostResponse = zUserPostSchema;

export const zPublicPostControllerGetRandomPostResponse = zPublicPostSchema;

export const zPublicPostControllerGetPostResponse = zPublicPostSchema;

export const zPublicPostControllerGetPostsResponse = zPublicPostsSchema;
