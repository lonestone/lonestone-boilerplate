// This file is auto-generated by @hey-api/openapi-ts

import type {
  PostControllerGetUserPostsResponse,
  PostControllerCreatePostResponse,
  PostControllerGetUserPostResponse,
  PostControllerUpdatePostResponse,
  PublicPostControllerGetRandomPostResponse,
  PublicPostControllerGetPostResponse,
  PublicPostControllerGetPostsResponse,
  CommentsControllerGetCommentsResponse,
  CommentsControllerCreateCommentResponse,
  CommentsControllerGetCommentRepliesResponse,
} from "./types.gen";

const postVersionSchemaSchemaResponseTransformer = (data: any) => {
  data.createdAt = new Date(data.createdAt);
  return data;
};

const userPostsSchemaSchemaResponseTransformer = (data: any) => {
  data.data = data.data.map((item: any) => {
    item.versions = item.versions.map((item: any) => {
      return postVersionSchemaSchemaResponseTransformer(item);
    });
    if (item.publishedAt) {
      item.publishedAt = new Date(item.publishedAt);
    }
    return item;
  });
  return data;
};

export const postControllerGetUserPostsResponseTransformer = async (
  data: any
): Promise<PostControllerGetUserPostsResponse> => {
  data = userPostsSchemaSchemaResponseTransformer(data);
  return data;
};

const userPostSchemaSchemaResponseTransformer = (data: any) => {
  data.versions = data.versions.map((item: any) => {
    return postVersionSchemaSchemaResponseTransformer(item);
  });
  if (data.publishedAt) {
    data.publishedAt = new Date(data.publishedAt);
  }
  return data;
};

export const postControllerCreatePostResponseTransformer = async (
  data: any
): Promise<PostControllerCreatePostResponse> => {
  data = userPostSchemaSchemaResponseTransformer(data);
  return data;
};

export const postControllerGetUserPostResponseTransformer = async (
  data: any
): Promise<PostControllerGetUserPostResponse> => {
  data = userPostSchemaSchemaResponseTransformer(data);
  return data;
};

export const postControllerUpdatePostResponseTransformer = async (
  data: any
): Promise<PostControllerUpdatePostResponse> => {
  data = userPostSchemaSchemaResponseTransformer(data);
  return data;
};

const publicPostSchemaSchemaResponseTransformer = (data: any) => {
  data.publishedAt = new Date(data.publishedAt);
  return data;
};

export const publicPostControllerGetRandomPostResponseTransformer = async (
  data: any
): Promise<PublicPostControllerGetRandomPostResponse> => {
  data = publicPostSchemaSchemaResponseTransformer(data);
  return data;
};

export const publicPostControllerGetPostResponseTransformer = async (
  data: any
): Promise<PublicPostControllerGetPostResponse> => {
  data = publicPostSchemaSchemaResponseTransformer(data);
  return data;
};

const publicPostsSchemaSchemaResponseTransformer = (data: any) => {
  data.data = data.data.map((item: any) => {
    item.publishedAt = new Date(item.publishedAt);
    return item;
  });
  return data;
};

export const publicPostControllerGetPostsResponseTransformer = async (
  data: any
): Promise<PublicPostControllerGetPostsResponse> => {
  data = publicPostsSchemaSchemaResponseTransformer(data);
  return data;
};

const commentSchemaSchemaResponseTransformer = (data: any) => {
  data.createdAt = new Date(data.createdAt);
  return data;
};

const commentsSchemaSchemaResponseTransformer = (data: any) => {
  data.data = data.data.map((item: any) => {
    return commentSchemaSchemaResponseTransformer(item);
  });
  return data;
};

export const commentsControllerGetCommentsResponseTransformer = async (
  data: any
): Promise<CommentsControllerGetCommentsResponse> => {
  data = commentsSchemaSchemaResponseTransformer(data);
  return data;
};

export const commentsControllerCreateCommentResponseTransformer = async (
  data: any
): Promise<CommentsControllerCreateCommentResponse> => {
  data = commentSchemaSchemaResponseTransformer(data);
  return data;
};

export const commentsControllerGetCommentRepliesResponseTransformer = async (
  data: any
): Promise<CommentsControllerGetCommentRepliesResponse> => {
  data = commentsSchemaSchemaResponseTransformer(data);
  return data;
};
